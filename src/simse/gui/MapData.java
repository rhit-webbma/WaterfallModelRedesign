/* File generated by: simse.codegenerator.guigenerator.MapDataGenerator */
// MapData works as a structure (having only fields).  It contains all the keys for any particular image, as well as
// the ImagImageViewociated with that key. Currently some keys are not in use i.e. have no image associated with them
package simse.gui;

import java.io.FileInputStream;
import java.io.FileNotFoundException;

import javafx.scene.image.Image;
import javafx.scene.image.ImageView;

public class MapData {
	static final int TILE_SIZE = 50; // size of 1 tile
	static final int X_MAPSIZE = 16; // number of tiles along X axis for map
	static final int Y_MAPSIZE = 10; // number of tiles along Y axis for map

	static final int TRANSPARENT = -1;
	static final int TILE_GRID = 0;
	static final int TILE_DARK = -2;
	static final int USER_SELECTED = -11;
	static final int TILE_FLOOR = -3;

	static final int TILE_CHAIRT = 101; // chair, face north
	static final int TILE_CHAIRB = 102; // face east
	static final int TILE_CHAIRL = 103;
	static final int TILE_CHAIRR = 104;

	static final int TILE_TRASHCANE = 2;
	static final int TILE_TRASHCANF = 3;

	static final int TILE_COMPUTER = 4;
	static final int TILE_PAPERS = 5;

	static final int TILE_STABLE_TL = 401; // square table
	static final int TILE_STABLE_TM = 402;
	static final int TILE_STABLE_TR = 403;
	static final int TILE_STABLE_ML = 404;
	static final int TILE_STABLE_MM = 405;
	static final int TILE_STABLE_MR = 406;
	static final int TILE_STABLE_BL = 407;
	static final int TILE_STABLE_BM = 408;
	static final int TILE_STABLE_BR = 409;

	static final int TILE_RTABLE1 = 411; // round table
	static final int TILE_RTABLE2 = 412;
	static final int TILE_RTABLE3 = 413;
	static final int TILE_RTABLE4 = 414;
	static final int TILE_RTABLE5 = 415;
	static final int TILE_RTABLE6 = 416;
	static final int TILE_RTABLE7 = 417;
	static final int TILE_RTABLE8 = 418;
	static final int TILE_RTABLE9 = 419;

	static final int TILE_DOOR = 5; // door

	static final int TILE_WALL_T = 601; // wall
	static final int TILE_WALL_B = 602;
	static final int TILE_WALL_L = 603;
	static final int TILE_WALL_R = 604;
	static final int TILE_WALL_TL = 605;
	static final int TILE_WALL_TR = 606;
	static final int TILE_WALL_BL = 607;
	static final int TILE_WALL_BR = 608;

	static final int TILE_DOOR_TO = 611;
	static final int TILE_DOOR_TC = 612;
	static final int TILE_DOOR_LO = 613;
	static final int TILE_DOOR_LC = 614;
	static final int TILE_DOOR_RO = 615;
	static final int TILE_DOOR_RC = 616;

	static final String dir = "/simse/gui/images/";
	static final ImageView transparent = ImageLoader.getImageFromURL(dir
			+ "transparent.gif");
	static final ImageView grid = ImageLoader.getImageFromURL(dir + "grid.gif");
	static final ImageView floor = ImageLoader.getImageFromURL(dir + "floor.gif");
	static final ImageView chairT = ImageLoader.getImageFromURL(dir + "chairT.gif");
	static final ImageView chairB = ImageLoader.getImageFromURL(dir + "chairB.gif");
	static final ImageView chairL = ImageLoader.getImageFromURL(dir + "chairL.gif");
	static final ImageView chairR = ImageLoader.getImageFromURL(dir + "chairR.gif");
	static final ImageView computer = ImageLoader.getImageFromURL(dir + "computer.gif");
 
//	static final ImageView dark = ImageLoader.getImageFromURL(dir + "dark.gif");
	static final ImageView trashcanE = ImageLoader
			.getImageFromURL(dir + "trashcan_e.gif");
	static final ImageView trashcanF = ImageLoader
			.getImageFromURL(dir + "trashcan_f.gif");
	static final ImageView papers = ImageLoader.getImageFromURL(dir + "papers.gif");

	static final ImageView wallT = ImageLoader.getImageFromURL(dir + "wall/wall_t.gif");
	static final ImageView wallB = ImageLoader.getImageFromURL(dir + "wall/wall_b.gif");
	static final ImageView wallL = ImageLoader.getImageFromURL(dir + "wall/wall_l.gif");
	static final ImageView wallR = ImageLoader.getImageFromURL(dir + "wall/wall_r.gif");
	static final ImageView wallTL = ImageLoader.getImageFromURL(dir + "wall/wall_tl.gif");
	static final ImageView wallTR = ImageLoader.getImageFromURL(dir + "wall/wall_tr.gif");
	static final ImageView wallBL = ImageLoader.getImageFromURL(dir + "wall/wall_bl.gif");
	static final ImageView wallBR = ImageLoader.getImageFromURL(dir + "wall/wall_br.gif");

	static final ImageView doorTO = ImageLoader.getImageFromURL(dir + "wall/door_to.gif");
	static final ImageView doorTC = ImageLoader.getImageFromURL(dir + "wall/door_tc.gif");
	static final ImageView doorLO = ImageLoader.getImageFromURL(dir + "wall/door_lo.gif");
	static final ImageView doorLC = ImageLoader.getImageFromURL(dir + "wall/door_lc.gif");
	static final ImageView doorRO = ImageLoader.getImageFromURL(dir + "wall/door_ro.gif");
	static final ImageView doorRC = ImageLoader.getImageFromURL(dir + "wall/door_rc.gif");

	static final ImageView sTableTL = ImageLoader.getImageFromURL(dir
			+ "table/sTable_tl.gif");
	static final ImageView sTableTM = ImageLoader.getImageFromURL(dir
			+ "table/sTable_tm.gif");
	static final ImageView sTableTR = ImageLoader.getImageFromURL(dir
			+ "table/sTable_tr.gif");
	static final ImageView sTableBL = ImageLoader.getImageFromURL(dir
			+ "table/sTable_bl.gif");
	static final ImageView sTableBM = ImageLoader.getImageFromURL(dir
			+ "table/sTable_bm.gif");
	static final ImageView sTableBR = ImageLoader.getImageFromURL(dir
			+ "table/sTable_br.gif");

	static final ImageView speechTL = ImageLoader.getImageFromURL(dir + "speechTL.gif");
	static final ImageView speechTR = ImageLoader.getImageFromURL(dir + "speechTR.gif");
	static final ImageView speechBL = ImageLoader.getImageFromURL(dir + "speechBL.gif");
	static final ImageView speechBR = ImageLoader.getImageFromURL(dir + "speechBR.gif");

	static final ImageView error = ImageLoader.getImageFromURL(dir + "error.gif");

	public static ImageView getImage(String file) {
		ImageView img = null;
        try {
            img = new ImageView(new Image(new FileInputStream(file)));
        } catch (FileNotFoundException e) {
            System.out.println("Image not found at " + file);
        }
        return img;
	}

	public static ImageView getImage(int key) {
		switch (key) {
		case TRANSPARENT:
			return transparent;
		case TILE_GRID:
			return grid;

		case TILE_FLOOR:
			return floor;
		case TILE_COMPUTER:
			return computer;
		case TILE_CHAIRT:
			return chairT;
		case TILE_CHAIRB:
			return chairB;
		case TILE_CHAIRL:
			return chairL;
		case TILE_CHAIRR:
			return chairR;

		case TILE_TRASHCANE:
			return trashcanE;
		case TILE_TRASHCANF:
			return trashcanF;
		case TILE_PAPERS:
			return papers;

		case TILE_DOOR_TO:
			return doorTO;
		case TILE_DOOR_TC:
			return doorTC;
		case TILE_DOOR_LO:
			return doorLO;
		case TILE_DOOR_LC:
			return doorLC;
		case TILE_DOOR_RO:
			return doorRO;
		case TILE_DOOR_RC:
			return doorRC;

		case TILE_WALL_TL:
			return wallTL;
		case TILE_WALL_T:
			return wallT;
		case TILE_WALL_TR:
			return wallTR;

		case TILE_WALL_L:
			return wallL;
		case TILE_WALL_R:
			return wallR;

		case TILE_WALL_BL:
			return wallBL;
		case TILE_WALL_B:
			return wallB;
		case TILE_WALL_BR:
			return wallBR;

		case TILE_STABLE_TL:
			return sTableTL;
		case TILE_STABLE_TM:
			return sTableTM;
		case TILE_STABLE_TR:
			return sTableTR;

		case TILE_STABLE_BL:
			return sTableBL;
		case TILE_STABLE_BM:
			return sTableBM;
		case TILE_STABLE_BR:
			return sTableBR;

		default:
			return error;
		}
	}
}