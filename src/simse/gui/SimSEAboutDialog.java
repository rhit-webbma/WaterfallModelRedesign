/* File generated by: simse.codegenerator.guigenerator.SimSEAboutDialogGenerator */
package simse.gui;

import javafx.event.EventHandler;
import javafx.geometry.HPos;
import javafx.geometry.Insets;
import javafx.geometry.VPos;
import javafx.scene.control.Button;
import javafx.scene.control.Dialog;
import javafx.scene.control.DialogPane;
import javafx.scene.control.Label;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.Background;
import javafx.scene.layout.BackgroundFill;
import javafx.scene.layout.Border;
import javafx.scene.layout.BorderStroke;
import javafx.scene.layout.BorderStrokeStyle;
import javafx.scene.layout.BorderWidths;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.Pane;
import javafx.scene.layout.Priority;
import javafx.scene.paint.Color;

public class SimSEAboutDialog extends Dialog<String> implements EventHandler<MouseEvent> {
	Label lblIcon;
	private Button btnOK;

	private String versionNo = "v2.0";

//	public SimSEAboutDialog(Frame f) {
//		super(f, "About SimSE", true);
//		setDefaultCloseOperation(2);
//		setSize(380, 350);
//		buildGUI();
//	}
	
	public SimSEAboutDialog() {
		this.setHeight(350);
		this.setWidth(380);
		buildGUI();
	}

	public void buildGUI() {
//		GridBagConstraints gbc;
		DialogPane dialogPane = this.getDialogPane();
//		gbl = new GridBagLayout();
//		con.setLayout(gbl);
		GridPane con = new GridPane();

		// logo
//		JPanel top = new JPanel(gbl);
		Pane top = new Pane();
		top.setBorder(new Border(new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,
													null, new BorderWidths(2))));
//		top.setBackground(new Color(102, 102, 102, 255));
		top.setBackground(new Background(new BackgroundFill(new Color(102, 102, 102, 255),
																null, null)));
		Label lblLogo = new Label("", 
				ImageLoader.getImageFromURL("/simse/gui/images/layout/simselogo-about.gif"));
		lblLogo.setPrefSize(100, 200);
		lblLogo.relocate(0, 0); //Probably correct
		GridPane.setConstraints(lblLogo, 0, 0, 1, 1, HPos.LEFT, VPos.TOP, Priority.NEVER, 
				Priority.NEVER, new Insets(5, 0, 5, 0));
		top.getChildren().add(lblLogo);

		Pane mid = new Pane();
		Label lblSimse = new Label("SimSE: " + versionNo);
		Label lblDesc = new Label(
				"An Educational Software Engineering Simulation Environment");
		Label lblUrl = new Label("http://www.ics.uci.edu/~emilyo/SimSE");
		Label lblSpacer = new Label(" ");

		GridPane.setConstraints(lblSimse, 0, 0, 1, 1, HPos.LEFT, VPos.TOP, Priority.NEVER, 
				Priority.NEVER, new Insets(0, 10, 0, 0));
		mid.getChildren().add(lblSimse);
		
		GridPane.setConstraints(lblDesc, 0, 1, 1, 1, HPos.LEFT, VPos.TOP, Priority.NEVER, 
				Priority.NEVER, new Insets(0, 10, 0, 0));
		mid.getChildren().add(lblDesc);
		
		GridPane.setConstraints(lblUrl, 0, 2, 1, 1, HPos.LEFT, VPos.TOP, Priority.NEVER, 
				Priority.NEVER, new Insets(0, 10, 0, 0));
		mid.getChildren().add(lblUrl);

		GridPane.setConstraints(lblSpacer, 0, 3, 1, 1, HPos.LEFT, VPos.TOP, Priority.NEVER, 
				Priority.NEVER, new Insets(0, 10, 0, 0));
		mid.getChildren().add(lblSpacer);

		Label lblLead = new Label("Lead Developer:");
		Label lblEmily = new Label("  Emily Oh Navarro");
		Label lblCont = new Label("Contributing Developer:");
		Label lblCalvin = new Label("  Calvin Lee");
		Label lblSup = new Label("Supervising Faculty:");
		Label lblAndre = new Label("  Andre van der Hoek");

		GridPane.setConstraints(lblLead, 0, 5, 1, 1, HPos.LEFT, VPos.TOP, Priority.NEVER, 
				Priority.NEVER, new Insets(0, 10, 0, 0));
		mid.getChildren().add(lblLead);

		GridPane.setConstraints(lblEmily, 0, 5, 1, 1, HPos.LEFT, VPos.TOP, Priority.NEVER, 
				Priority.NEVER, new Insets(0, 10, 0, 0));
		mid.getChildren().add(lblEmily);

		GridPane.setConstraints(lblCont, 0, 6, 1, 1, HPos.LEFT, VPos.TOP, Priority.NEVER, 
				Priority.NEVER, new Insets(0, 10, 0, 0));
		mid.getChildren().add(lblCont);

		GridPane.setConstraints(lblCalvin, 0, 7, 1, 1, HPos.LEFT, VPos.TOP, Priority.NEVER, 
				Priority.NEVER, new Insets(0, 10, 0, 0));
		mid.getChildren().add(lblCalvin);
		
		GridPane.setConstraints(lblSup, 0, 9, 1, 1, HPos.LEFT, VPos.TOP, Priority.NEVER, 
				Priority.NEVER, new Insets(0, 10, 0, 0));
		mid.getChildren().add(lblSup);

		GridPane.setConstraints(lblAndre, 0, 9, 1, 1, HPos.LEFT, VPos.TOP, Priority.NEVER, 
				Priority.NEVER, new Insets(0, 10, 0, 0));
		mid.getChildren().add(lblAndre);

		// add the panels

		GridPane.setConstraints(top, 0, 0, 1, 1, HPos.LEFT, VPos.TOP, Priority.NEVER, 
				Priority.NEVER, new Insets(0, 0, 0, 0));
		con.getChildren().add(top);

		GridPane.setConstraints(mid, 0, 1, 1, 1, HPos.LEFT, VPos.TOP, Priority.NEVER, 
				Priority.NEVER, new Insets(0, 0, 0, 0));
		con.getChildren().add(mid);

		btnOK = new Button("Close");
		btnOK.addEventHandler(MouseEvent.MOUSE_CLICKED, this);

		GridPane.setConstraints(btnOK, 0, 2, 1, 1, HPos.LEFT, VPos.BOTTOM, Priority.NEVER, 
				Priority.NEVER, new Insets(10, 10, 10, 10));
		con.getChildren().add(btnOK);
	}

	@Override
	public void handle(MouseEvent event) {
		Object source = event.getSource();
		// handle the okay / cancel button
		if (source instanceof Button) {
			if (source == btnOK) {
				close();
			}
		}
	}
}